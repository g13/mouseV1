#############################
#    How to use the code    #
#############################

#  The original code was run on DALMA, HPC in New York University Abu Dhabi.

0. Get to a HPC module environment that use SLURM scripts.
    $ git clone git@github.com:g13/mouseV1.git
1. Set parameters in gMap2.m for generating LGN to V1 mapping
2. Set parameters in generateConMat.m for generating connection and strength between V1 neurons
3. Find other global parameters in gg.slurm and submit the setup job with
    $ sbatch gg.slurm
4. Create a folder and copy the code in template/ to it.
5. Set global name in sbatch_sim4x3, note that here 12 jobs were submitted, each with 4 cpus.
    (If you want to use different number of cpus, and you are familiar with openmp in FORTRAN, go ahead and modify any of the EIFSep*.f in src/)
6. Set simulation parameters: simulation time, time step, connection strength and more in adg_INPUT
7. Submit the simulation with 
    $ ./sbatch_sim4x3

To plot only, match global settings in pA.slurm with sbatch_sim4x3 and set ploting parameters.
# Most of the parameters are described in the correspoding source files and the Supplementary Material of the publication.

####### variable description of ./template/adg_INPUT ##########

# simulation 
dt: time step used in envolving the equations in the simulation in seconds
tfinal: total simulation run time in seconds
iperiod: number of samples in one temporal period, equally spaced.
iseed: seed of random number generator
rstart: warm-up time to discard in some data recording.
transient: time before t=0, discards as transient.
recordAllspikes: record all spikes (includes Poisson input spike train) for all neurons
nsample: number of sample neuron chosen to record quantity at every ms
twindow: time to record the sample neurons from (tfinal - twindow to tfinal)
idap: 1 or 0, apply adaptation conductance

# parameters for the EIF model (Eqn.1 in the paper):
Vthres: membrane potential threshold for action potential
Vreset: resting potential
Vexcit: reversal potential for excitatory input
Vinhib: reversal potential for inhibitory input
Gleak: leaky conductance for excitatory neuron
DeltaT: parameter in the Exponential term 
vTheta: the cutoff potential used to avoid infinity NaN when simulating EIF model.
GleakI: leaky conductance for inhibitory neuron

# input parameter
    omega: temporal frequency of sinusoidal wave
    k:     spatial frequency of sinusoidal wave
    g0: spotaneous LGN conductance for an excitatory V1 neuron with the average number of LGN connection
    gfail: synaptic failure for LGN to V1 connection.
    phi: phase of the sinusoidal wave, non-influential

# time constant (ignore the ones with the line start with "rk4:"):
    tau_e, tau0: rising and damping time constant for excitatory input
    tau_i, tau1: rising and damping time constant for inhibitory input
    tnrise, tndamp: rising and damping time constant for NMDA receptor 
    taulgn: rising time constant for LGN temporal kernel. The damping time constant is fixed as 5/3 of the rising one.
    trefE: refractory period of excitatory neuron.
    trefI: refractory period of inhibitory neuron.

# connection-related, direction as right to left
# i as inhibitory, e as excitatory
    Sie, Sei, Sii: connection strength
    See: ratio of e to e connection strength as in profile.out
    Cee, Cii: connection strength changes linearly from See(Sii) to Cee(Cii) as number of LGN decreases.
    # convenient setups, overwrite the parameters above if > 0:
    siall = -1: if > 0, all presynaptic inhibitory connection strength (s and c) are set to siall.
    se4all = -1; if > 0, See, Sie are set to se4all
    ce4all = -1; if > 0, Cee, Cie are set to ce4all
    spotaE: excitatory adaptation conductance strength
    spotaI: inhibitory adaptation conductance strength
    synfailEI, synfailEE, synfailEI, synfailII: synaptic failure rate for each type of connection, 1.00 as no failure.
    fnmdatE fnmdacE fnmdanE: NMDA receptor portions of excitatory input to excitatory V1 neurons in terms of LGN, cortical and constant(noise) poisson connections
    fnmdatI fnmdacI fnmdanI: NMDA receptor portions of excitatory input to inhibitory V1 neurons. 

# DON'T CHANGE the following paramter, if you dont know what you are doing:
    theta = 4, each process handles 4 orientations and 4 contrasts
    rI0 = 1, output ratio of the LGN kernel convolution to static nonlinearity
    rk = 2, Runga-Kutta 4 method for EIF model is not implemeted. 
    readCon = 1.0, read connection matrix from file.
    Unitary = 0.5, non-single value E to E connection strength
    nProfile = 31, number of connection strength values in profile.out
    jlgn = 256, number of LGN cells
    lgnlinear = 0, linear transfer function for LGN
    xScale = 0.05923, transfer function's scaling paramter of input
    yScale = 0.875, transfer function's scaling paramter of ouput 
    frtlgn0 = 109.5, spontaneous LGN linear input into transfer function
    frtexc_e = 0, ce0_e: constant poisson excitatory input to excitatory neuron, rate and strength.
    frtinh_e = 0, ci0_e: constant poisson inhibitory input to excitatory neuron, rate and strength.
    frtexc_i = 0, ce0_i: constant poisson excitatory input to inhibitory neuron, rate and strength.
    frtinh_i = 0, ci0_i: constant poisson inhibitory input to inhibitory neuron, rate and strength.
    gIIc = 0, gEIc = 0: constant inhibitory conductance for excitatory and inhibitory neurons, respectively.

# non-related parameters(redundant or out-dated implementations in the code), ignore:
    tstep1, tstep2, tstep3, tstep4: unused time steps for data recording
    tau_i_2: time constatn for another type of inhibitory conductance shape, out-dated
    dE, dI, rdexc, raexc, rdinh, rainh, neffII, neffEE, neffEI, neffIE: parameters for setup connection matrix in simulation, out-dated
    eps: dummy parameter

# For related issues pls send email to wd554@nyu.edu or submit issues on github.
